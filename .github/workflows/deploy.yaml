name: Build and Deploy

on: workflow_dispatch
  # push:
  #   branches:
  #     - main
  #   paths: 
  #     - app-codebase/**
  #     - helm-chart/**

env:
  REGISTRY: ghcr.io

jobs:
  npm-build:
    name: Code Build Phase
    runs-on: [self-hosted]
    permissions:
      contents: read
      packages: write
    steps: 
      - name: Pull code
        uses: actions/checkout@v4

      - name: Install dependencies
        working-directory: app-codebase
        run: npm ci

      - name: NPM Build
        working-directory: app-codebase
        run: npm run build

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          projectBaseDir: app-codebase
    
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: app-codebase/dist/

  docker-build:
    name: Docker Build and Push
    runs-on: [self-hosted]
    permissions:
      contents: read
      packages: write
    needs:
      - npm-build
    outputs:
      image_tag: sha-${{ github.sha }}
    steps:
      - name: Pull code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      
      - name: Docker image tags extract
        id: docker_tags
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          tags: |
            type=sha,format=long
            latest

      - name: Docker Build
        uses: docker/build-push-action@v6
        with:
          context: app-codebase
          push: true
          tags: ${{ steps.docker_tags.outputs.tags }}
          labels: ${{ steps.docker_tags.outputs.labels }}
      
      - name: Trivy image scan
        run: trivy image ${{ env.REGISTRY }}/${{ github.repository }}:sha-${{ github.sha }} --severity CRITICAL,HIGH --format table

  deploy: 
    name: Deploy Application
    runs-on: [self-hosted]
    permissions:
      contents: read
      packages: read
    needs:
      - docker-build
    steps:
      - name: Pull code
        uses: actions/checkout@v4

      - name: Pull Docker Image
        run: docker pull ${{ env.REGISTRY }}/${{ github.repository }}:${{ needs.docker-build.outputs.image_tag }}

      - name: Update kubeconfig
        run: aws eks --region us-east-1 update-kubeconfig --name devops-eks-cluster

      - name: Deploy application using helm
        run: helm upgrade --install tic-tac-toe helm-chart/ --create-namespace devops-project --set image.tag=${{ needs.docker-build.outputs.image_tag }} -f helm-chart/values.yaml
      
        
      
      
